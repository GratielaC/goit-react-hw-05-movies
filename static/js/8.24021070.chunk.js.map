{"version":3,"file":"static/js/8.24021070.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","webpack://react-homework-template/./src/components/movieDetails/MovieDetails.module.css?553c","components/movieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__J+sRw\",\"castItem\":\"Cast_castItem__cc+xY\",\"castImage\":\"Cast_castImage__yEBWj\",\"name\":\"Cast_name__zEAJr\",\"character\":\"Cast_character__BekbJ\"};","import React from 'react';\r\nimport styles from './Cast.module.css';\r\nimport noImageAvailable from '../../images/no-image-available.jpg';\r\nimport PropTypes from 'prop-types'\r\nimport 'common.css';\r\n\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <>\r\n      {cast.length > 0 ? (\r\n        <ul className={styles.castList}>\r\n          {cast.map(actor => (\r\n            <li className={styles.castItem} key={actor.id}>\r\n              <p className={styles.name}> Name: {actor.name}</p>\r\n              <p className={styles.character}> Character: {actor.character}</p>\r\n              {actor.profile_path ? (\r\n                <img\r\n                  className={styles.castImage}\r\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                  alt={actor.name}\r\n                />\r\n              ) : (\r\n                <img\r\n                  className={styles.castImage}\r\n                  src={noImageAvailable}\r\n                  alt=\"No profile available\"\r\n                />\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className='notFound'>No cast information available.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.array\r\n}\r\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__BNV9F\",\"reviewsList\":\"Reviews_reviewsList__5XfMd\",\"reviewContent\":\"Reviews_reviewContent__G0k+l\"};","import React from 'react';\r\nimport styles from './Reviews.module.css';\r\nimport '../../common.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Reviews = ({ reviews }) => {\r\n  return (\r\n    <div className={styles.reviews}>\r\n      {reviews && reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <li className={styles.reviewsList} key={review.id}>\r\n              <p className={styles.reviewContent}>{review.content}</p>\r\n              <p>\r\n                <strong>By: </strong>\r\n                {review.author}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"notFound\">No reviews available for this movie.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.array,\r\n};\r\n\r\nexport default Reviews;","// extracted by mini-css-extract-plugin\nexport default {\"detailsContainer\":\"MovieDetails_detailsContainer__yjLOU\",\"goBackButton\":\"MovieDetails_goBackButton__Xen4u\",\"poster\":\"MovieDetails_poster__STo6i\",\"title\":\"MovieDetails_title__kR1VL\",\"category\":\"MovieDetails_category__gpfcJ\",\"overview\":\"MovieDetails_overview__mTBzf\",\"genres\":\"MovieDetails_genres__vzFmh\",\"rating\":\"MovieDetails_rating__eGgVU\",\"additionalInfo\":\"MovieDetails_additionalInfo__rMD0O\",\"buttonsContainer\":\"MovieDetails_buttonsContainer__hGgLd\",\"buttonInfo\":\"MovieDetails_buttonInfo__iFCZ4\",\"titleInfo\":\"MovieDetails_titleInfo__8YQGz\"};","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getMovieDetails, getCast, getReviews } from '../../services/fetchApi';\r\nimport Cast from '../cast/Cast';\r\nimport Reviews from '../reviews/Reviews';\r\nimport Loader from '../loader/Loader';\r\nimport styles from './MovieDetails.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [movie, setMovie] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [showCast, setShowCast] = useState(false);\r\n  const [showReviews, setShowReviews] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const movieData = await getMovieDetails(id);\r\n        setMovie(movieData);\r\n\r\n        // preincarcam datele pentru cast si reviews\r\n        const [castData, reviewsData] = await Promise.all([\r\n          getCast(id),\r\n          getReviews(id),\r\n        ]);\r\n\r\n        setCast(castData.cast || []);\r\n        setReviews(reviewsData.results || []);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [id]);\r\n\r\n  const handleCast = () => {\r\n    setShowCast(true);\r\n    setShowReviews(false);\r\n  };\r\n\r\n  const handleReviews = () => {\r\n    setShowReviews(true);\r\n    setShowCast(false);\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n\r\n      {!isLoading && movie && (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleGoBack}\r\n            className={styles.goBackButton}\r\n          >\r\n            Go Back\r\n          </button>\r\n          <div className={styles.detailsContainer}>\r\n            <div>\r\n              <img\r\n                className={styles.poster}\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h1 className={styles.title}>\r\n                {movie.title} ({new Date(movie.release_date).getFullYear()})\r\n              </h1>\r\n              <p className={styles.rating}>User score: {movie.vote_average}</p>\r\n              <p className={styles.category}>Overview</p>\r\n              <p className={styles.overview}>{movie.overview}</p>\r\n              <p className={styles.category}>Genres</p>\r\n              <p className={styles.genres}>\r\n                {movie.genres.map(genre => genre.name).join(', ')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.additionalInfo}>\r\n            <h3 className={styles.titleInfo}>Additional Information</h3>\r\n            <div className={styles.buttonsContainer}>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.buttonInfo}\r\n                onClick={handleCast}\r\n              >\r\n                Cast\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.buttonInfo}\r\n                onClick={handleReviews}\r\n              >\r\n                Reviews\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {showCast && <Cast cast={cast} />}\r\n          {showReviews && <Reviews reviews={reviews} />}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMovieDetails.propTypes = {  \r\n  movie: PropTypes.object,\r\n  cast: PropTypes.array,\r\n  reviews: PropTypes.array,\r\n  showCast: PropTypes.bool,\r\n  showReviews: PropTypes.bool,\r\n  isLoading: PropTypes.bool\r\n}\r\n\r\nexport default MovieDetails;","import axios from 'axios';\r\n\r\nconst API_KEY = 'e9266c447aab517e2a3535d4d83992e9';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n// functie helper pentru a face cereri la API\r\nasync function fetchData(endpoint, params = {}) {\r\n  const url = `${BASE_URL}${endpoint}`;\r\n  const config = {\r\n    params: { ...params, api_key: API_KEY },\r\n  }; \r\n\r\n  try {\r\n    const response = await axios.get(url, config);\r\n    return response.data; \r\n  } catch (error) {\r\n  \r\n    if (error.response) {\r\n      // eroare http (status diferit de 200)\r\n      throw new Error(\r\n        `Error: ${error.response.status} - ${error.response.statusText}`\r\n      );\r\n    } else if (error.request) {\r\n      // nu s-a primit răspuns de la server\r\n      throw new Error('Nu s-a primit răspuns de la server');\r\n    } else {\r\n      // erori de configurare\r\n      throw new Error(`Eroare: ${error.message}`);\r\n    }\r\n  }\r\n}\r\n\r\n// metode pentru fiecare endpoint\r\n\r\n// lista cu cele mai populare filme\r\nexport async function getTrendingMovies() {\r\n  const endpoint = '/trending/movie/day';\r\n  return fetchData(endpoint);\r\n}\r\n\r\n// cautare filme\r\nexport async function searchMovies(query) {\r\n  const endpoint = '/search/movie';\r\n  return fetchData(endpoint, { query });\r\n}\r\n\r\n// detalii despre un film\r\nexport async function getMovieDetails(movieId) {\r\n  const endpoint = `/movie/${movieId}`;\r\n  return fetchData(endpoint);\r\n}\r\n\r\n// lista cu actorii unui film\r\nexport async function getMovieCredits(movieId) {\r\n  const endpoint = `/movie/${movieId}/credits`;\r\n  return fetchData(endpoint);\r\n}\r\n\r\n//date despre actorii unui film\r\nexport async function getCast(movieId) {\r\n  const endpoint = `/movie/${movieId}/credits`;\r\n  return fetchData(endpoint);\r\n}\r\n //recenziile unui film\r\nexport async function getReviews(movieId) {\r\n  const endpoint = `/movie/${movieId}/reviews`;\r\n  return fetchData(endpoint);\r\n}"],"names":["_ref","cast","_jsx","_Fragment","children","length","className","styles","map","actor","_jsxs","name","character","profile_path","src","concat","alt","noImageAvailable","id","reviews","review","content","author","useParams","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","setCast","_useState5","_useState6","setReviews","_useState7","_useState8","showCast","setShowCast","_useState9","_useState10","showReviews","setShowReviews","_useState11","_useState12","isLoading","setIsLoading","useEffect","fetchMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_yield$Promise$all","_yield$Promise$all2","castData","reviewsData","_context","prev","next","getMovieDetails","sent","Promise","all","getCast","getReviews","results","t0","console","log","finish","stop","apply","arguments","Loader","type","onClick","poster_path","title","Date","release_date","getFullYear","vote_average","overview","genres","genre","join","Cast","Reviews","API_KEY","BASE_URL","fetchData","_x","_fetchData","endpoint","params","url","config","response","_args","undefined","_objectSpread","api_key","axios","abrupt","data","Error","status","statusText","request","message","getTrendingMovies","_getTrendingMovies","_callee2","_context2","searchMovies","_x2","_searchMovies","_callee3","query","_context3","_x3","_getMovieDetails","_callee4","movieId","_context4","_x5","_getCast","_callee6","_context6","_x6","_getReviews","_callee7","_context7"],"sourceRoot":""}